# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = false

# '%{$fg_bold[green]%} %{$fg[cyan]%}%c%{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'
# format='$all'
format='$os$directory$git_branch$status$character'

right_format='$cmd_duration$git_status$package$c$python$lua$golang$kotlin$java$rust$nodejs'

# Replace the '❯' symbol in the prompt with '➜'
[character] # The name of the module we are configuring is 'character'
format = '[$symbol]($style) '
# error_symbol = '[✗](bold red) '
error_symbol = '[](bold red)'
success_symbol = '[➜](bold green)'

[package]
disabled = false
format = '[$symbol$version]($style) '

[os]
disabled = false
format = '[$symbol](blue) '

[os.symbols]
Arch = ' '

[c]
format = '[($symbol$version(-$name) )]($style)'
symbol = ' '
detect_files = ['compile_commands.json']

[python]
format = '[($symbol$version(-$name) )]($style)'
symbol = ' '

[lua]
format = '[($symbol$version(-$name) )]($style)'

[rust]
format = '[($symbol$version(-$name) )]($style)'
detect_files = ['rustfmt.toml']

[golang]
format = '[($symbol$version(-$name) )]($style)'

[nodejs]
format = '[($symbol$version(-$name) )]($style)'

[kotlin]
format = '[$symbol]($style)[via]($style) '
symbol = ' '

[java]
format = '[($symbol$version(-$name))]($style)'
style = 'bold red'
symbol = '󰬷 '

[status]
format = '[$common_meaning$signal_name$maybe_int](bold red) '
disabled = false

[cmd_duration]
format = ' [ $duration]($style) '

[directory]
truncation_length = 1
read_only = ' '
use_os_path_sep = false

[git_branch]
format = '\([$branch(:$remote_branch)]($style)\) '
style = 'bold red'
